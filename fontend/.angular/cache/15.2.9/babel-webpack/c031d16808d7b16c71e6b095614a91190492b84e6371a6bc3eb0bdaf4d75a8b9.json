{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nexport class CarrinhoService {}\n_class = CarrinhoService;\n_class.ɵfac = function CarrinhoService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAKA,OAAM,MAAOA,eAAe;SAAfA,eAAe;;mBAAfA,MAAe;AAAA;;SAAfA,MAAe;EAAAC,SAAfD,MAAe;EAAAE,YAFd;AAAM","names":["CarrinhoService","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Letticia_Tonon\\Downloads\\Vanessa\\Vanessa\\fontend\\src\\app\\service\\carrinho.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CarrinhoService {\r\n  //   private carrinhoItems: any[] = [];\r\n\r\n  //   adicionarAoCarrinho(item: any, quantidade_estoque: number = 1) {\r\n  //       // Verificar se o item já está no carrinho\r\n  //       const itemExistente = this.carrinhoItems.find((i) => i.id === item.id);\r\n    \r\n  //       if (itemExistente) {\r\n  //         itemExistente.quantidade += quantidade_estoque;\r\n  //       } else {\r\n  //           this.carrinhoItems.push({ ...item, quantidade_estoque });\r\n  //       }\r\n  //   }    \r\n\r\n  // removerDoCarrinho(item: any) {\r\n    \r\n  //   const index = this.carrinhoItems.indexOf(item);\r\n  //   if (index !== -1) {\r\n  //     this.carrinhoItems.splice(index, 1);\r\n  //   }\r\n  // }\r\n\r\n  // obterCarrinhoItems() {\r\n    \r\n  //   return this.carrinhoItems;\r\n  // }\r\n\r\n  // limparCarrinho() {\r\n    \r\n  //   this.carrinhoItems = [];\r\n  // }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}