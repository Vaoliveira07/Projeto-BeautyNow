{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Cliente } from './cliente.model';\nlet ClienteComponent = class ClienteComponent {\n  constructor(clienteService, rotas) {\n    this.clienteService = clienteService;\n    this.rotas = rotas;\n    this.mensagem = \"\";\n    this.obj = new Cliente();\n    this.lista = [];\n  }\n  ngOnInit() {\n    let codigo = this.rotas.snapshot.paramMap.get(\"codigo\");\n    if (codigo != null) {\n      this.obj.codigo = Number(codigo);\n      this.pesquisar();\n    }\n  }\n  mostrar() {\n    this.mensagem = \"Registro gravado com sucesso!\";\n    let clienteAux = new Cliente(this.obj);\n    this.lista.push(clienteAux);\n    window.localStorage.setItem('listaCliente', JSON.stringify(this.lista));\n  }\n  gravar() {\n    try {\n      if (this.obj.codigo == 0) {\n        this.clienteService.gravar(this.obj);\n        this.mensagem = \"Cliente gravado com sucesso!\";\n      } else {\n        this.clienteService.alterar(this.obj);\n        this.mensagem = \"Cliente alterado com sucesso!\";\n      }\n    } catch {\n      this.mensagem = \"Ocorreu um erro, verifique!\";\n    }\n  }\n  pesquisar() {\n    this.mensagem = \"\";\n    try {\n      this.clienteService.carregar(this.obj.codigo).subscribe(retorno => {\n        this.obj.email = retorno.email;\n        this.obj.nome = retorno.nome;\n        this.obj.senha = retorno.senha;\n        this.obj.telefone = retorno.telefone;\n        if (retorno.nome == null) this.mensagem = \"Registro não encontrado!\";\n      });\n    } catch {\n      this.mensagem = \"Ocorreu um erro, verifique!\";\n    }\n  }\n  remover() {\n    try {\n      this.clienteService.remover(this.obj.codigo);\n      this.mensagem = \"registro removido com sucesso!\";\n    } catch {\n      this.mensagem = \"Ocorreu um erro durante o processo!\";\n    }\n  }\n};\nClienteComponent = __decorate([Component({\n  selector: 'app-cliente',\n  templateUrl: './cliente.component.html',\n  styleUrls: ['./cliente.component.css']\n})], ClienteComponent);\nexport { ClienteComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,OAAO,QAAQ,iBAAiB;AASlC,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAK3BC,YAAoBC,cAA8B,EAC9BC,KAAqB;IADrB,mBAAc,GAAdD,cAAc;IACd,UAAK,GAALC,KAAK;IALzB,aAAQ,GAAY,EAAE;IACtB,QAAG,GAAY,IAAIJ,OAAO,EAAE;IAC5B,UAAK,GAAc,EAAE;EAGuB;EAE5CK,QAAQ;IACN,IAAIC,MAAM,GAAG,IAAI,CAACF,KAAK,CAACG,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,QAAQ,CAAC;IACvD,IAAGH,MAAM,IAAE,IAAI,EAAC;MACd,IAAI,CAACI,GAAG,CAACJ,MAAM,GAAGK,MAAM,CAACL,MAAM,CAAC;MAChC,IAAI,CAACM,SAAS,EAAE;;EAEpB;EAEOC,OAAO;IACZ,IAAI,CAACC,QAAQ,GAAG,+BAA+B;IAC/C,IAAIC,UAAU,GAAa,IAAIf,OAAO,CAAC,IAAI,CAACU,GAAG,CAAC;IAChD,IAAI,CAACM,KAAK,CAACC,IAAI,CAACF,UAAU,CAAC;IAC3BG,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACN,KAAK,CAAC,CAAC;EACzE;EAEOO,MAAM;IACX,IAAG;MACD,IAAG,IAAI,CAACb,GAAG,CAACJ,MAAM,IAAE,CAAC,EAAC;QACpB,IAAI,CAACH,cAAc,CAACoB,MAAM,CAAC,IAAI,CAACb,GAAG,CAAC;QACpC,IAAI,CAACI,QAAQ,GAAG,8BAA8B;OAC/C,MAAO;QACN,IAAI,CAACX,cAAc,CAACqB,OAAO,CAAC,IAAI,CAACd,GAAG,CAAC;QACrC,IAAI,CAACI,QAAQ,GAAG,+BAA+B;;KAElD,CACD,MAAK;MACH,IAAI,CAACA,QAAQ,GAAG,6BAA6B;;EAEjD;EAEOF,SAAS;IACd,IAAI,CAACE,QAAQ,GAAG,EAAE;IAClB,IAAG;MACD,IAAI,CAACX,cAAc,CAACsB,QAAQ,CAAC,IAAI,CAACf,GAAG,CAACJ,MAAM,CAAC,CAACoB,SAAS,CACpDC,OAAgB,IAAI;QACnB,IAAI,CAACjB,GAAG,CAACkB,KAAK,GAAGD,OAAO,CAACC,KAAK;QAC9B,IAAI,CAAClB,GAAG,CAACmB,IAAI,GAAGF,OAAO,CAACE,IAAI;QAC5B,IAAI,CAACnB,GAAG,CAACoB,KAAK,GAAGH,OAAO,CAACG,KAAK;QAC9B,IAAI,CAACpB,GAAG,CAACqB,QAAQ,GAAGJ,OAAO,CAACI,QAAQ;QACpC,IAAGJ,OAAO,CAACE,IAAI,IAAE,IAAI,EAAG,IAAI,CAACf,QAAQ,GAAG,0BAA0B;MACpE,CAAC,CAAC;KACL,CACD,MAAK;MACH,IAAI,CAACA,QAAQ,GAAG,6BAA6B;;EAEjD;EAEOkB,OAAO;IACZ,IAAG;MACD,IAAI,CAAC7B,cAAc,CAAC6B,OAAO,CAAC,IAAI,CAACtB,GAAG,CAACJ,MAAM,CAAC;MAC5C,IAAI,CAACQ,QAAQ,GAAG,gCAAgC;KACjD,CACD,MAAK;MACH,IAAI,CAACA,QAAQ,GAAG,qCAAqC;;EAEzD;CACD;AAhEYb,gBAAgB,eAL5BF,SAAS,CAAC;EACTkC,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,GACWlC,gBAAgB,CAgE5B;SAhEYA,gBAAgB","names":["Component","Cliente","ClienteComponent","constructor","clienteService","rotas","ngOnInit","codigo","snapshot","paramMap","get","obj","Number","pesquisar","mostrar","mensagem","clienteAux","lista","push","window","localStorage","setItem","JSON","stringify","gravar","alterar","carregar","subscribe","retorno","email","nome","senha","telefone","remover","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\projetos\\pwebn\\web10_exemplo\\fontend\\src\\app\\cliente\\cliente.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Cliente } from './cliente.model';\nimport { ClienteService } from '../service/cliente.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-cliente',\n  templateUrl: './cliente.component.html',\n  styleUrls: ['./cliente.component.css']\n})\nexport class ClienteComponent {\n  mensagem : string = \"\";\n  obj: Cliente = new Cliente();\n  lista: Cliente[] = [];\n  \n  constructor(private clienteService: ClienteService, \n              private rotas: ActivatedRoute) {}\n\n  ngOnInit(){\n    let codigo = this.rotas.snapshot.paramMap.get(\"codigo\");\n    if(codigo!=null){\n      this.obj.codigo = Number(codigo);\n      this.pesquisar();\n    }     \n  }              \n\n  public mostrar(){\n    this.mensagem = \"Registro gravado com sucesso!\";\n    let clienteAux : Cliente = new Cliente(this.obj);    \n    this.lista.push(clienteAux);\n    window.localStorage.setItem('listaCliente', JSON.stringify(this.lista));\n  }\n\n  public gravar(){\n    try{\n      if(this.obj.codigo==0){\n        this.clienteService.gravar(this.obj);\n        this.mensagem = \"Cliente gravado com sucesso!\";\n      }  else {\n        this.clienteService.alterar(this.obj);\n        this.mensagem = \"Cliente alterado com sucesso!\";\n      }      \n    }\n    catch{\n      this.mensagem = \"Ocorreu um erro, verifique!\";\n    }\n  }\n\n  public pesquisar(){\n    this.mensagem = \"\";\n    try{      \n      this.clienteService.carregar(this.obj.codigo).subscribe(\n        (retorno: Cliente) => {            \n          this.obj.email = retorno.email;\n          this.obj.nome = retorno.nome;\n          this.obj.senha = retorno.senha;\n          this.obj.telefone = retorno.telefone;\n          if(retorno.nome==null)  this.mensagem = \"Registro não encontrado!\";          \n        });\n    }\n    catch{\n      this.mensagem = \"Ocorreu um erro, verifique!\";\n    }\n  }\n\n  public remover(){\n    try{\n      this.clienteService.remover(this.obj.codigo);\n      this.mensagem = \"registro removido com sucesso!\";\n    } \n    catch{\n      this.mensagem = \"Ocorreu um erro durante o processo!\";\n    }     \n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}