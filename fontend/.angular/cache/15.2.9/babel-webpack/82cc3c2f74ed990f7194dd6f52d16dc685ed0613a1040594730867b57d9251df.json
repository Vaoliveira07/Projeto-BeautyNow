{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet VitrineComponent = class VitrineComponent {\n  constructor(produtosService, carrinhoService, router) {\n    this.produtosService = produtosService;\n    this.carrinhoService = carrinhoService;\n    this.router = router;\n    this.lista = [];\n    this.mensagem = \"\";\n    this.nomeUsuario = \"\";\n    this.quantidadeDesejada = 1;\n  }\n  ngOnInit() {\n    this.listar();\n    let nome = localStorage.getItem(\"nomeCliente\");\n    if (nome != null) this.nomeUsuario = \"Olá, \" + nome;\n  }\n  listar() {\n    try {\n      this.produtosService.listar().subscribe(retorno => {\n        this.lista = this.shuffle(retorno).slice(0, 3);\n        this.mensagem = \"\";\n      }, error => {\n        console.error(error); // Adicione este log para verificar se há erros na chamada.\n        this.mensagem = \"Erro ao obter a lista de produtos.\";\n      });\n    } catch {\n      this.mensagem = \"não foi encontrado nenhum registro !\";\n    }\n  }\n  shuffle(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  }\n};\nVitrineComponent = __decorate([Component({\n  selector: 'app-vitrine',\n  templateUrl: './vitrine.component.html',\n  styleUrls: ['./vitrine.component.css']\n})], VitrineComponent);\nexport { VitrineComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAW1C,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAM3BC,YACUC,eAAgC,EAChCC,eAAgC,EAChCC,MAAc;IAFd,oBAAe,GAAfF,eAAe;IACf,oBAAe,GAAfC,eAAe;IACf,WAAM,GAANC,MAAM;IARhB,UAAK,GAAe,EAAE;IACtB,aAAQ,GAAW,EAAE;IACrB,gBAAW,GAAW,EAAE;IACxB,uBAAkB,GAAW,CAAC;EAKF;EAC5BC,QAAQ;IACN,IAAI,CAACC,MAAM,EAAE;IACb,IAAIC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IAC9C,IAAIF,IAAI,IAAI,IAAI,EAAE,IAAI,CAACG,WAAW,GAAG,OAAO,GAAGH,IAAI;EACrD;EACOD,MAAM;IACX,IAAI;MACF,IAAI,CAACJ,eAAe,CAACI,MAAM,EAAE,CAACK,SAAS,CACpCC,OAAmB,IAAI;QACtB,IAAI,CAACC,KAAK,GAAG,IAAI,CAACC,OAAO,CAACF,OAAO,CAAC,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;QAC9C,IAAI,CAACC,QAAQ,GAAG,EAAE;MACpB,CAAC,EACDC,KAAK,IAAG;QACNC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC,CAAE;QACvB,IAAI,CAACD,QAAQ,GAAG,oCAAoC;MACtD,CAAC,CACF;KACF,CAAC,MAAM;MACN,IAAI,CAACA,QAAQ,GAAG,sCAAsC;;EAE1D;EAEOF,OAAO,CAACK,KAAiB;IAC9B,KAAK,IAAIC,CAAC,GAAGD,KAAK,CAACE,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MACzC,MAAME,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC;MAC7C,CAACD,KAAK,CAACC,CAAC,CAAC,EAAED,KAAK,CAACG,CAAC,CAAC,CAAC,GAAG,CAACH,KAAK,CAACG,CAAC,CAAC,EAAEH,KAAK,CAACC,CAAC,CAAC,CAAC;;IAE7C,OAAOD,KAAK;EACd;CAED;AAxCYnB,gBAAgB,eAL5BD,SAAS,CAAC;EACT2B,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,GACW5B,gBAAgB,CAwC5B;SAxCYA,gBAAgB","names":["Component","VitrineComponent","constructor","produtosService","carrinhoService","router","ngOnInit","listar","nome","localStorage","getItem","nomeUsuario","subscribe","retorno","lista","shuffle","slice","mensagem","error","console","array","i","length","j","Math","floor","random","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Letticia_Tonon\\Downloads\\Vanessa\\Vanessa\\fontend\\src\\app\\vitrine\\vitrine.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ProdutosService } from '../service/produtos.service';\nimport { CarrinhoService } from '../service/carrinho.service';\nimport { Router } from '@angular/router';\nimport { Produtos } from '../produtos/produtos.model';\n\n@Component({\n  selector: 'app-vitrine',\n  templateUrl: './vitrine.component.html',\n  styleUrls: ['./vitrine.component.css']\n})\nexport class VitrineComponent implements OnInit {\n  lista: Produtos[] = [];\n  mensagem: String = \"\";\n  nomeUsuario: String = \"\";\n  quantidadeDesejada: number = 1;\n\n  constructor(\n    private produtosService: ProdutosService,\n    private carrinhoService: CarrinhoService,\n    private router: Router) { }\n  ngOnInit(): void {\n    this.listar();\n    let nome = localStorage.getItem(\"nomeCliente\");\n    if (nome != null) this.nomeUsuario = \"Olá, \" + nome;\n  }\n  public listar() {\n    try {\n      this.produtosService.listar().subscribe(\n        (retorno: Produtos[]) => {\n          this.lista = this.shuffle(retorno).slice(0, 3);\n          this.mensagem = \"\";\n        },\n        error => {\n          console.error(error);  // Adicione este log para verificar se há erros na chamada.\n          this.mensagem = \"Erro ao obter a lista de produtos.\";\n        }\n      );\n    } catch {\n      this.mensagem = \"não foi encontrado nenhum registro !\";\n    }\n  }\n\n  public shuffle(array: Produtos[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  };\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}