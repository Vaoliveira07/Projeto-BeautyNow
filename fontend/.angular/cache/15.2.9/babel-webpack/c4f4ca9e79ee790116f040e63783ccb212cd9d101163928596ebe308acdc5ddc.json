{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nexport class CarrinhoService {\n  constructor() {\n    this.carrinhoItems = [];\n  }\n  adicionarAoCarrinho(item, quantidade_estoque = 1) {\n    // Verificar se o item já está no carrinho\n    const itemExistente = this.carrinhoItems.find(i => i.id === item.id);\n    if (itemExistente) {\n      itemExistente.quantidade += quantidade_estoque;\n    } else {\n      this.carrinhoItems.push({\n        ...item,\n        quantidade_estoque\n      });\n    }\n  }\n  removerDoCarrinho(item) {\n    const index = this.carrinhoItems.indexOf(item);\n    if (index !== -1) {\n      this.carrinhoItems.splice(index, 1);\n    }\n  }\n  obterCarrinhoItems() {\n    return this.carrinhoItems;\n  }\n  limparCarrinho() {\n    this.carrinhoItems = [];\n  }\n}\n_class = CarrinhoService;\n_class.ɵfac = function CarrinhoService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAKA,OAAM,MAAOA,eAAe;EAH5BC;IAIY,kBAAa,GAAU,EAAE;;EAEjCC,mBAAmB,CAACC,IAAS,EAAEC,qBAA6B,CAAC;IACzD;IACA,MAAMC,aAAa,GAAG,IAAI,CAACC,aAAa,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKN,IAAI,CAACM,EAAE,CAAC;IAEtE,IAAIJ,aAAa,EAAE;MACjBA,aAAa,CAACK,UAAU,IAAIN,kBAAkB;KAC/C,MAAM;MACH,IAAI,CAACE,aAAa,CAACK,IAAI,CAAC;QAAE,GAAGR,IAAI;QAAEC;MAAkB,CAAE,CAAC;;EAEhE;EAEFQ,iBAAiB,CAACT,IAAS;IAEzB,MAAMU,KAAK,GAAG,IAAI,CAACP,aAAa,CAACQ,OAAO,CAACX,IAAI,CAAC;IAC9C,IAAIU,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,CAACP,aAAa,CAACS,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;;EAEvC;EAEAG,kBAAkB;IAEhB,OAAO,IAAI,CAACV,aAAa;EAC3B;EAEAW,cAAc;IAEZ,IAAI,CAACX,aAAa,GAAG,EAAE;EACzB;;SA9BWN,eAAe;;mBAAfA,MAAe;AAAA;;SAAfA,MAAe;EAAAkB,SAAflB,MAAe;EAAAmB,YAFd;AAAM","names":["CarrinhoService","constructor","adicionarAoCarrinho","item","quantidade_estoque","itemExistente","carrinhoItems","find","i","id","quantidade","push","removerDoCarrinho","index","indexOf","splice","obterCarrinhoItems","limparCarrinho","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Letticia_Tonon\\Downloads\\Vanessa\\Vanessa\\fontend\\src\\app\\service\\carrinho.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CarrinhoService {\r\n    private carrinhoItems: any[] = [];\r\n\r\n    adicionarAoCarrinho(item: any, quantidade_estoque: number = 1) {\r\n        // Verificar se o item já está no carrinho\r\n        const itemExistente = this.carrinhoItems.find((i) => i.id === item.id);\r\n    \r\n        if (itemExistente) {\r\n          itemExistente.quantidade += quantidade_estoque;\r\n        } else {\r\n            this.carrinhoItems.push({ ...item, quantidade_estoque });\r\n        }\r\n    }    \r\n\r\n  removerDoCarrinho(item: any) {\r\n    \r\n    const index = this.carrinhoItems.indexOf(item);\r\n    if (index !== -1) {\r\n      this.carrinhoItems.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  obterCarrinhoItems() {\r\n    \r\n    return this.carrinhoItems;\r\n  }\r\n\r\n  limparCarrinho() {\r\n    \r\n    this.carrinhoItems = [];\r\n  }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}